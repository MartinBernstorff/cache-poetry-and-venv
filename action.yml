name: 'Cache poetry and venv'
description: 'Cache poetry and venv'
runs:
  using: "composite"
  steps:
    # Override version numbers to avoid invalidating cache on version bump
    - name: Linux, Overwrite version number from pyproject.toml, so it doesn't invalidate cache
      id: remove-version-from-toml-macos
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        ls
        sed -i "s/version = \".*\"/version = \"0.0.0\"/g" pyproject.toml
        cat pyproject.toml

    - name: Mac, Overwrite version number from pyproject.toml, so it doesn't invalidate cache
      id: remove-version-from-toml-ubuntu
      if: matrix.os == 'macos-latest'
      shell: bash
      run: |
        sed -i '' "s/version = \".*\"/version = \"0.0.0\"/g" pyproject.toml
        cat pyproject.toml
    
    - name: Windows, Overwrite version number from pyproject.toml, so it doesn't invalidate cache
      id: remove-version-from-toml-windows
      if: matrix.os == 'windows-latest'
      shell: powershell
      run: |
        (Get-Content pyproject.toml | Where { $_ -notmatch "^version" }) | Set-Content pyproject.toml

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2.1.6
      with:
        path: |
          .venv
          poetry.lock
        # Cache the complete venv dir for a given os, python version, pyproject.toml
        key: venv-${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.github/workflows/cache_version') }}

    - name: Mac, Linux, Load cached .local (Poetry install location)
      id: cached-poetry-unix
      if: (matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest')
      uses: actions/cache@v2.1.6
      with:
        path: |
          ~/.local/
        # Cache the complete venv dir for a given os, python version, pyproject.toml
        key: venv-${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.github/workflows/cache_version') }}--${{ hashFiles('.github/workflows/main_test_and_release.yml') }}

    - name: Windows, Load cached Poetry install (Poetry install location)
      id: cached-poetry-windows
      if: matrix.os == 'windows-latest'
      uses: actions/cache@v2.1.6
      with:
        path: |
          %APPDATA%\pypoetry
        # Cache the complete venv dir for a given os, python version, pyproject.toml
        key: venv-${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.github/workflows/cache_version') }}--${{ hashFiles('.github/workflows/main_test_and_release.yml') }}